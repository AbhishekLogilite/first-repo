Should be able to insert 1 lac to 1 million or more records in a database table
					&
Program must output total time taken to insert given number of records and how many records
inserted.

	package com.test;
	import java.sql.Connection;
	import java.sql.DriverManager;
	import java.sql.PreparedStatement;
	import java.sql.SQLException;
	import java.util.Random;

	import org.apache.log4j.Logger;

	public class starting {
		final static Logger logger = Logger.getLogger(Log4jRun.class);

		public static void main(String[] args) throws SQLException {

			long startTime = System.currentTimeMillis();
			long endTime = 0;
			int total_No_Of_Records = 1000000;
			int count = 1;
			for (int i = 1; i < total_No_Of_Records; i++) {
				String name = getrandomName();
				int age = 0;
				try {
					age = getRandomNumber(18, 60);
				} catch (Exception e) {
					e.printStackTrace();
				}
				Randomm random = new Randomm(i, name, age);
				insertUsers(random);
				logger.info(random.toString());
				count++;
			}

			endTime = System.currentTimeMillis();
			long minutes = (-1) * ((startTime - endTime) / 1000) / 60;
			long seconds = (-1) * ((startTime - endTime) / 1000) % 60;

			logger.info("Total Time taken : Minutes -> " + minutes + " and, Second -> " + seconds);

			logger.info("Total Number of Records are Added " + count);
		}

		private static String getrandomName() {
			String[] name = { "Fred", "Jane", "Roxy", "Hana", "Rock", "Jack", "Luffy", "Ace", "Gol D Rogger" };
			Random random = new Random();
			return name[random.nextInt(name.length)];
		}

		public static int getRandomNumber(int min, int max) {
			return (int) ((Math.random() * (max - min)) + min);
		}

		public static void insertUsers(Randomm ran) {
			Connection c = null;
			try {
				Class.forName("org.postgresql.Driver");
				c = DriverManager.getConnection("jdbc:postgresql://localhost:5432/student", "postgres", "123456");

				c.setAutoCommit(false);

				int i = ran.getId();
				String names = ran.getName();
				int ages = ran.getAge();

				PreparedStatement st = c.prepareStatement("INSERT INTO students (id, name ,age ) VALUES (?, ?, ?)");
				st.setInt(1, i);
				st.setString(2, names);
				st.setObject(3, ages);
				st.executeUpdate();
				st.close();
				c.commit();
				c.close();
			} catch (Exception e) {
				logger.error(e.getClass().getName() + ": " + e.getMessage());
				System.exit(0);
			}
		}
	}

	class Randomm {
		int id;
		String name;
		int age;

		public Randomm(int id, String name, int age) {
			super();
			this.id = id;
			this.name = name;
			this.age = age;
		}

		public int getId() {
			return id;
		}

		public void setId(int id) {
			this.id = id;
		}

		public String getName() {
			return name;
		}

		public void setName(String name) {
			this.name = name;
		}

		public int getAge() {
			return age;
		}

		public void setAge(int age) {
			this.age = age;
		}

		@Override
		public String toString() {
			return "id=" + id + ", name=" + name + ", age=" + age;
		}

	}





No hard coding in program, for each values like number of records, database port, database
name etc use a properties file concept. This file must present under resources folder of project
structure


	package com.test;

	import java.io.FileInputStream;
	import java.io.IOException;
	import java.sql.Connection;
	import java.sql.DriverManager;
	import java.sql.ResultSet;
	import java.sql.SQLException;
	import java.sql.Statement;
	import java.util.Properties;

	import org.apache.log4j.Logger;

	public class MyConnWithProperties {

		public static void main(String a[]) throws IOException, SQLException {

			final Logger logger = Logger.getLogger(Log4jRun.class);
			
			System.setProperty("Jdbc.drivers", "org.postgresql.Driver");
			Properties prop = new Properties();
			FileInputStream fis = new FileInputStream("/home/abhishek/eclipse-workspace/Log4jTest/classes/fileProp.properties");
			prop.load(fis);
			String jdbcUrl = prop.getProperty("url");
			String users = prop.getProperty("user");
			String pass = prop.getProperty("password");
			String ports = prop.getProperty("port");
			String dbName = prop.getProperty("name");
			Connection con = DriverManager.getConnection(jdbcUrl, users, pass);
			Statement st = con.createStatement();
			ResultSet rs = st.executeQuery("SELECT * FROM students");
			int count = 1;
			while (rs.next()) {
				count++;
			}
			logger.info("No of records inserted : " + count +", Database name : " + dbName+", Database port : "+ports);

		}
	}




Adding multiple data into database from one to other database by copy command

	CREATE TABLE studentdata AS
	SELECT * FROM student;


Fetching data from both table using foreign key and joins

	select person.person_name ,contacts.contact_name,contacts.phone, contacts.email_id
	from person
	inner join contacts
	on person.person_id = contacts.person_id;

			or
	
	select * from person
	join contacts on person.person_id = contacts.person_id;


Left join 

	select * from person 
	left join contacts on person.person_id = contacts.person_id;


Query fetching data from single table having primary key data

	SELECT * FROM student;

	
Query fetching data from single table and not having any primary key data

	SELECT * FROM  collegedata;

update the data of
	
	UPDATE college SET student_emailid = 'abc@gmail.com' WHERE id = 121;



